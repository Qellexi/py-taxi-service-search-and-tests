From 752d0c92b8668e55b187c2798398bcbed5afd646 Mon Sep 17 00:00:00 2001
From: Oleksii Proshchenko <80070761+MasterpieceElbow@users.noreply.github.com>
Date: Mon, 18 Apr 2022 10:31:54 +0300
Subject: [PATCH 01/52] Initial commit

---
 .flake8                           |  8 ++++++++
 .github/workflows/test.yml        | 31 +++++++++++++++++++++++++++++++
 .gitignore                        | 10 ++++++++++
 README.md                         |  5 +++++
 app/__init__.py                   |  0
 app/db/__init__.py                |  0
 app/db/migrations/0001_initial.py | 21 +++++++++++++++++++++
 app/db/migrations/__init__.py     |  0
 app/db/models.py                  |  8 ++++++++
 app/init_django_orm.py            |  7 +++++++
 app/main.py                       | 14 ++++++++++++++
 app/manage.py                     | 10 ++++++++++
 app/settings.py                   | 20 ++++++++++++++++++++
 app/tests/__init__.py             |  0
 app/tests/test_main.py            | 12 ++++++++++++
 pytest.ini                        |  3 +++
 requirements.txt                  |  4 ++++
 17 files changed, 153 insertions(+)
 create mode 100644 .flake8
 create mode 100644 .github/workflows/test.yml
 create mode 100644 .gitignore
 create mode 100644 README.md
 create mode 100644 app/__init__.py
 create mode 100644 app/db/__init__.py
 create mode 100644 app/db/migrations/0001_initial.py
 create mode 100644 app/db/migrations/__init__.py
 create mode 100644 app/db/models.py
 create mode 100644 app/init_django_orm.py
 create mode 100644 app/main.py
 create mode 100644 app/manage.py
 create mode 100644 app/settings.py
 create mode 100644 app/tests/__init__.py
 create mode 100644 app/tests/test_main.py
 create mode 100644 pytest.ini
 create mode 100644 requirements.txt

diff --git a/.flake8 b/.flake8
new file mode 100644
index 0000000..00a8cd7
--- /dev/null
+++ b/.flake8
@@ -0,0 +1,8 @@
+[flake8]
+ignore = E203, E266, W503
+max-line-length = 79
+max-complexity = 18
+select = B,C,E,F,W,T4,B9
+exclude =
+    **migrations
+    venv
diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
new file mode 100644
index 0000000..f30dc9d
--- /dev/null
+++ b/.github/workflows/test.yml
@@ -0,0 +1,31 @@
+name: Test
+
+on:
+  pull_request:
+    branches:
+      - "master"
+
+jobs:
+  test:
+    runs-on: ubuntu-latest
+    timeout-minutes: 10
+
+    steps:
+      - name: Checkout repo
+        uses: actions/checkout@v2
+
+      - name: Set Up Python 3.8
+        uses: actions/setup-python@v2
+        with:
+          python-version: 3.8
+
+      - name: Install requirements
+        run: |
+          python -m pip install --upgrade pip
+          pip install -r requirements.txt
+      - name: Run flake8
+        run: flake8 app/
+
+      - name: Run tests
+        timeout-minutes: 5
+        run: pytest app/
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..fd1f3e4
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,10 @@
+.idea/
+.vscode/
+*.iml
+.env
+.DS_Store
+venv/
+.pytest_cache/
+**__pycache__/
+*.pyc
+app/db.sqlite3
\ No newline at end of file
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..b986630
--- /dev/null
+++ b/README.md
@@ -0,0 +1,5 @@
+# Django ORM boilerplate for GitHub tasks
+
+- Warning: Use `pytest app` for testing - not simple `pytest`
+- Read [the guideline](https://github.com/mate-academy/py-task-guideline/blob/main/README.md) before start
+- Implement the task described [here](app/main.py)
\ No newline at end of file
diff --git a/app/__init__.py b/app/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/app/db/__init__.py b/app/db/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/app/db/migrations/0001_initial.py b/app/db/migrations/0001_initial.py
new file mode 100644
index 0000000..621228f
--- /dev/null
+++ b/app/db/migrations/0001_initial.py
@@ -0,0 +1,21 @@
+# Generated by Django 4.0.2 on 2022-02-16 06:57
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='User',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=50)),
+            ],
+        ),
+    ]
diff --git a/app/db/migrations/__init__.py b/app/db/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/app/db/models.py b/app/db/models.py
new file mode 100644
index 0000000..14d904c
--- /dev/null
+++ b/app/db/models.py
@@ -0,0 +1,8 @@
+from django.db import models
+
+
+class User(models.Model):
+    name = models.CharField(max_length=50)
+
+    def __str__(self):
+        return self.name
diff --git a/app/init_django_orm.py b/app/init_django_orm.py
new file mode 100644
index 0000000..e1ec234
--- /dev/null
+++ b/app/init_django_orm.py
@@ -0,0 +1,7 @@
+import sys
+import os
+import django
+
+sys.dont_write_bytecode = True
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+django.setup()
diff --git a/app/main.py b/app/main.py
new file mode 100644
index 0000000..f7c4704
--- /dev/null
+++ b/app/main.py
@@ -0,0 +1,14 @@
+import init_django_orm  # noqa: F401
+
+from db.models import User
+
+
+def main():
+    User.objects.create(name='Dan')
+    User.objects.create(name='Robert')
+
+    return User.objects.all()
+
+
+if __name__ == '__main__':
+    print(main())
diff --git a/app/manage.py b/app/manage.py
new file mode 100644
index 0000000..e163372
--- /dev/null
+++ b/app/manage.py
@@ -0,0 +1,10 @@
+#!/usr/bin/env python
+import os
+import sys
+
+
+if __name__ == "__main__":
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "settings")
+    from django.core.management import execute_from_command_line
+
+    execute_from_command_line(sys.argv)
diff --git a/app/settings.py b/app/settings.py
new file mode 100644
index 0000000..915f4d4
--- /dev/null
+++ b/app/settings.py
@@ -0,0 +1,20 @@
+import os
+
+# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+
+# SECURITY WARNING: Modify this secret key if using in production!
+SECRET_KEY = "6few3nci_q_o@l1dlbk81%wcxe!*6r29yu629&d97!hiqat9fa"
+
+DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
+
+DATABASES = {
+    "default": {
+        "ENGINE": "django.db.backends.sqlite3",
+        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
+    }
+}
+
+USE_TZ = False
+
+INSTALLED_APPS = ("db",)
diff --git a/app/tests/__init__.py b/app/tests/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/app/tests/test_main.py b/app/tests/test_main.py
new file mode 100644
index 0000000..a41cf6d
--- /dev/null
+++ b/app/tests/test_main.py
@@ -0,0 +1,12 @@
+import pytest
+
+from ..main import main
+
+
+@pytest.mark.django_db
+def test_main():
+    users = main()
+    assert list(users.values_list("name")) == [
+        ("Dan",),
+        ("Robert",),
+    ]
diff --git a/pytest.ini b/pytest.ini
new file mode 100644
index 0000000..e3d7d3d
--- /dev/null
+++ b/pytest.ini
@@ -0,0 +1,3 @@
+[pytest]
+DJANGO_SETTINGS_MODULE = settings
+addopts = --reuse-db
\ No newline at end of file
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..c70f77b
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1,4 @@
+django==4.0.2
+pytest==6.2.5
+flake8==4.0.1
+pytest-django==4.5.2
\ No newline at end of file
-- 
2.45.1.windows.1

