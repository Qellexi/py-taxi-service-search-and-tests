From af8e2aa91904463f9728d891ef26368e464e14c8 Mon Sep 17 00:00:00 2001
From: danylott <d.tuytuyshkin@gmail.com>
Date: Tue, 11 Oct 2022 14:45:04 +0300
Subject: [PATCH 32/52] Added flake8 plugins and fixes for them

---
 .flake8                          | 10 ++++++++
 requirements.txt                 |  6 ++++-
 taxi/admin.py                    | 13 +++++++++-
 taxi/models.py                   |  2 +-
 taxi/urls.py                     | 19 +++++++++++---
 taxi_service/settings.py         | 18 ++++++++-----
 taxi_service/urls.py             |  2 +-
 tests/test_taxi_service_forms.py | 43 +++++++++++---------------------
 8 files changed, 71 insertions(+), 42 deletions(-)
 create mode 100644 .flake8

diff --git a/.flake8 b/.flake8
new file mode 100644
index 0000000..b5381af
--- /dev/null
+++ b/.flake8
@@ -0,0 +1,10 @@
+[flake8]
+inline-quotes = "
+ignore = E203, E266, W503, N807, N818, F401
+max-line-length = 79
+max-complexity = 18
+select = B,C,E,F,W,T4,B9,Q0,N8,VNE
+exclude =
+    **migrations
+    venv
+    tests
\ No newline at end of file
diff --git a/requirements.txt b/requirements.txt
index 300d9ff..9a8caa1 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,7 @@
-django==4.0.2
+django==4.1
+flake8==5.0.4
+flake8-quotes==3.3.1
+flake8-variables-names==0.0.5
+pep8-naming==0.13.2
 django-debug-toolbar==3.2.4
 django-crispy-forms==1.14.0
diff --git a/taxi/admin.py b/taxi/admin.py
index 01ed860..08448ba 100644
--- a/taxi/admin.py
+++ b/taxi/admin.py
@@ -10,7 +10,18 @@ class DriverAdmin(UserAdmin):
         (("Additional info", {"fields": ("license_number",)}),)
     )
     add_fieldsets = UserAdmin.add_fieldsets + (
-        (("Additional info", {"fields": ("first_name", "last_name", "license_number",)}),)
+        (
+            (
+                "Additional info",
+                {
+                    "fields": (
+                        "first_name",
+                        "last_name",
+                        "license_number",
+                    )
+                },
+            ),
+        )
     )
 
 
diff --git a/taxi/models.py b/taxi/models.py
index 2e62395..769fd70 100644
--- a/taxi/models.py
+++ b/taxi/models.py
@@ -25,7 +25,7 @@ class Driver(AbstractUser):
         return f"{self.username} ({self.first_name} {self.last_name})"
 
     def get_absolute_url(self):
-        return reverse("taxi:driver-detail", kwargs={'pk': self.pk})
+        return reverse("taxi:driver-detail", kwargs={"pk": self.pk})
 
 
 class Car(models.Model):
diff --git a/taxi/urls.py b/taxi/urls.py
index 7cff9b7..c663d6e 100644
--- a/taxi/urls.py
+++ b/taxi/urls.py
@@ -1,14 +1,27 @@
 from django.urls import path
 
-from .views import index, CarListView, CarDetailView, DriverListView, DriverDetailView, ManufacturerListView
+from .views import (
+    index,
+    CarListView,
+    CarDetailView,
+    DriverListView,
+    DriverDetailView,
+    ManufacturerListView,
+)
 
 urlpatterns = [
     path("", index, name="index"),
-    path("manufacturers/", ManufacturerListView.as_view(), name="manufacturer-list"),
+    path(
+        "manufacturers/",
+        ManufacturerListView.as_view(),
+        name="manufacturer-list",
+    ),
     path("cars/", CarListView.as_view(), name="car-list"),
     path("cars/<int:pk>/", CarDetailView.as_view(), name="car-detail"),
     path("drivers/", DriverListView.as_view(), name="driver-list"),
-    path("drivers/<int:pk>/", DriverDetailView.as_view(), name="driver-detail")
+    path(
+        "drivers/<int:pk>/", DriverDetailView.as_view(), name="driver-detail"
+    ),
 ]
 
 app_name = "taxi"
diff --git a/taxi_service/settings.py b/taxi_service/settings.py
index 8d3d23f..d89c456 100644
--- a/taxi_service/settings.py
+++ b/taxi_service/settings.py
@@ -20,7 +20,9 @@ BASE_DIR = Path(__file__).resolve().parent.parent
 # See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/
 
 # SECURITY WARNING: keep the secret key used in production secret!
-SECRET_KEY = "django-insecure-8ovil3xu6=eaoqd#-#&ricv159p0pypoh5_lgm*)-dfcjqe=yc"
+SECRET_KEY = (
+    "django-insecure-8ovil3xu6=eaoqd#-#&ricv159p0pypoh5_lgm*)-dfcjqe=yc"
+)
 
 # SECURITY WARNING: don"t run with debug turned on in production!
 DEBUG = True
@@ -92,22 +94,26 @@ DATABASES = {
 
 AUTH_PASSWORD_VALIDATORS = [
     {
-        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
+        "NAME": "django.contrib.auth.password_validation."
+        "UserAttributeSimilarityValidator",
     },
     {
-        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
+        "NAME": "django.contrib.auth.password_validation."
+        "MinimumLengthValidator",
     },
     {
-        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
+        "NAME": "django.contrib.auth.password_validation."
+        "CommonPasswordValidator",
     },
     {
-        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
+        "NAME": "django.contrib.auth.password_validation."
+        "NumericPasswordValidator",
     },
 ]
 
 AUTH_USER_MODEL = "taxi.Driver"
 
-LOGIN_REDIRECT_URL = '/'
+LOGIN_REDIRECT_URL = "/"
 
 # Internationalization
 # https://docs.djangoproject.com/en/4.0/topics/i18n/
diff --git a/taxi_service/urls.py b/taxi_service/urls.py
index 04a3748..a234134 100644
--- a/taxi_service/urls.py
+++ b/taxi_service/urls.py
@@ -23,5 +23,5 @@ urlpatterns = [
     path("admin/", admin.site.urls),
     path("", include("taxi.urls", namespace="taxi")),
     path("accounts/", include("django.contrib.auth.urls")),
-    path('__debug__/', include('debug_toolbar.urls')),
+    path("__debug__/", include("debug_toolbar.urls")),
 ] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
diff --git a/tests/test_taxi_service_forms.py b/tests/test_taxi_service_forms.py
index 25ac02f..6a92357 100644
--- a/tests/test_taxi_service_forms.py
+++ b/tests/test_taxi_service_forms.py
@@ -12,7 +12,7 @@ class CarTest(TestCase):
             license_number="ADM12345",
             first_name="Admin",
             last_name="User",
-            password="1qazcde3"
+            password="1qazcde3",
         )
         self.client.force_login(self.user)
         self.manufacturer = Manufacturer.objects.create(
@@ -26,13 +26,12 @@ class CarTest(TestCase):
             {
                 "model": "Continental",
                 "manufacturer": self.manufacturer.id,
-                "drivers": [self.user.id]
-            }
+                "drivers": [self.user.id],
+            },
         )
         self.assertEqual(response.status_code, 302)
         self.assertEqual(
-            Car.objects.get(id=self.user.cars.first().id).model,
-            "Continental"
+            Car.objects.get(id=self.user.cars.first().id).model, "Continental"
         )
 
     def test_update_car(self):
@@ -41,22 +40,17 @@ class CarTest(TestCase):
             manufacturer=self.manufacturer,
         )
         response = self.client.post(
-            reverse(
-                "taxi:car-update",
-                kwargs={"pk": car.id}),
+            reverse("taxi:car-update", kwargs={"pk": car.id}),
             {
                 "pk": car.id,
                 "model": "Not Continental",
                 "manufacturer": self.manufacturer.id,
-                "drivers": [self.user.id]
-            }
+                "drivers": [self.user.id],
+            },
         )
         Car.objects.get(id=car.id).refresh_from_db()
         self.assertEqual(response.status_code, 302)
-        self.assertEqual(
-            Car.objects.get(id=car.id).model,
-            "Not Continental"
-        )
+        self.assertEqual(Car.objects.get(id=car.id).model, "Not Continental")
 
     def test_delete_car(self):
         car = Car.objects.create(
@@ -77,7 +71,7 @@ class ManufacturerTest(TestCase):
             license_number="ADM12345",
             first_name="Admin",
             last_name="User",
-            password="1qazcde3"
+            password="1qazcde3",
         )
         self.client.force_login(self.user)
 
@@ -86,10 +80,7 @@ class ManufacturerTest(TestCase):
             reverse(
                 "taxi:manufacturer-create",
             ),
-            {
-                "name": "Lincoln",
-                "country": "USA"
-            }
+            {"name": "Lincoln", "country": "USA"},
         )
         self.assertEqual(response.status_code, 302)
         self.assertEqual(Manufacturer.objects.get(id=1).name, "Lincoln")
@@ -101,19 +92,14 @@ class ManufacturerTest(TestCase):
         )
         response = self.client.post(
             reverse(
-                "taxi:manufacturer-update",
-                kwargs={"pk": manufacturer.id}
+                "taxi:manufacturer-update", kwargs={"pk": manufacturer.id}
             ),
-            {
-                "name": "Not Lincoln",
-                "country": "USA"
-            }
+            {"name": "Not Lincoln", "country": "USA"},
         )
         Manufacturer.objects.get(id=manufacturer.id).refresh_from_db()
         self.assertEqual(response.status_code, 302)
         self.assertEqual(
-            Manufacturer.objects.get(id=manufacturer.id).name,
-            "Not Lincoln"
+            Manufacturer.objects.get(id=manufacturer.id).name, "Not Lincoln"
         )
 
     def test_delete_manufacturer(self):
@@ -122,8 +108,7 @@ class ManufacturerTest(TestCase):
             country="USA",
         )
         response = self.client.post(
-            reverse("taxi:manufacturer-delete",
-                    kwargs={"pk": manufacturer.id})
+            reverse("taxi:manufacturer-delete", kwargs={"pk": manufacturer.id})
         )
         self.assertEqual(response.status_code, 302)
         self.assertFalse(
-- 
2.45.1.windows.1

